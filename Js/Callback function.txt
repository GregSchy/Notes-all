let myNum = 42
let myNum2 = myNum

function myFunction(a, b) {
    console.log(a + b)
}

let myFunction2 = myFunction
myFunction2(1, 2)

 


=====================



const people = [
    { name: "Jack", hasPet: true, age: 12 },
    { name: "Jill", hasPet: false, age: 18 },
    { name: "Alice", hasPet: true, age: 22 },
    { name: "Bob", hasPet: false, age: 32 },
]

	WIEK FILTER

const result = people.filter(checkAge)
 
function checkAge(num) {
    return num.age >= 11;
}

console.log(result)


	ZWIERZĘTA FILTER

function gimmeThePets(person) {
    return person.hasPet
}

const peopleWithPets = people.filter(gimmeThePets)
console.log(peopleWithPets)

=============================

Given the array below, chain the `.filter` and `.map` array methods together to turn the array into an array of string email addresses of only the people in the array who voted. Log the array of email addresses to the console
 */


const voters = [
    {name: "Joe", email: "joe@joe.com", voted: true},
    {name: "Jane", email: "jane@jane.com", voted: true},
    {name: "Bo", email: "bo@bo.com", voted: false},
    {name: "Bane", email: "bane@bane.com", voted: false}
]

// Write your code below
const finalResult = voters.filter(voter => voter.voted).map(voter => voter.email)

console.log(finalResult)

============================================
 * What would happen if you didn't return `res.json()` 
 * from the first .then block?
 * 
 * What would the next .then() callback receive as its 
 * parameter if you returned something totally different??
 */


fetch("https://apis.scrimba.com/bored/api/activity")
    .then(function(res) {
        return "Hello"
    })
    .then(function(whatever) {
        console.log(whatever)
    })

KONSOLA ZALOGOWAŁA "HELLO"
================================

 